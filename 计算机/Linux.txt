1 GDB调试的基本原理  https://blog.csdn.net/pyf09/article/details/94021171?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.channel_param
只是利用了Linux提供的非常优雅的方式：ptrace系统调用，用man查看以下这个系统调用。ptrace可以让父进程观察和控制其子进程的检查、执行，
改变其寄存器和内存的内容。
(1) attach并调试一个已经运行的进程： 确定需要进行调试的进程id ；运行gdb，输入attch pid，如：gdb 12345。gdb将对指定进行执行如下操作：ptrace（PTRACE_ATTACH，pid，0,0） 
(2) 运行并调试一个新的进程 ：运行gdb，通过命令行参数或file指定目标调试程序，如gdb ./test ；输入run命令，gdb执行下述操作： 通过fork()系统调用创建一个新进程 。在新创建的子进程中调用ptrace(PTRACE_TRACEME，0,0,0） 。
在子进程中通过execv（）系统调用加载用户指定的可执行文件 
(3) 远程调试目标主机上新创建的进程 ：gdb运行在调试机，gdbserver运行在目标机，通过二者之间定义的数据格式进行通信。