1 操作系统的内核特征：并发、共享（微观互斥宏观共享）、虚拟、异步（程序执行走走停停）
2 操作系统提供中断（来自外部硬件设备的处理请求，异步，可嵌套）、异常（非法指令或者其他原因导致的当前指令执行失败，同步，可嵌套）和系统调用(应用程序主动向操作系统发出的服务请求，异步或同步)
3 系统调用有INT和IRET指令（有堆栈切换和特权级切换），函数调用时有CALL和RET指令(没有堆栈切换)
4 操作系统上的内存管理方式，重定位（地址偏移），分段（分开存放数据段、代码段、堆栈），分页（内存分为最基本的单位），虚拟存储
5 地址生成过程，编译汇编链接重定位 ALU需要逻辑地址的内存内容，MMU进行逻辑地址和物理地址的转换
6 非连续内存管理的方式有段式存储管理、页式存储管理和段页式存储，其中为了减少页表所占内存的大小，采用快表、多级页表和反置页表
7 页面置换算法分为局部置换算法（页面选择范围仅限于当前进程占用的物理页面内――最优算法、先讲先出算法、最近最久没使用算法，时钟算法，最不常用算法）和全局页面置换算法（置换页面选择时所有可换出的物理页面――工作集算法、缺页率算法）
8 最优页面置换算法（OPT）置换在未来最长时间不访问的页面；先进先出算法置换FIFO在内存驻留时间最长的页面；最近最久未使用算法LRU（Least Recently Used）选择最长时间没有被引用的页面进行置换;时钟置换算法（clock，使用环形链表）;最不常用算法（置换访问次数最少的算法――增加访问计数LFU(Least Frequently Used）)
9 Bleady现象，采用FIFO等算法，可能出现分配的物理页面数增加，缺页次数反而升高的异常现象
10 全局置换算法（为进程分配可变数目的物理页面）工作集置换算法和缺页率置换算法与抖动和负载控制
11 进程是一个具有一定独立功能的程序在一个数据集合上的一次动态执行过程（动态性、并发性、独立性和制约性）
进程=执行中的程序=程序+执行状态，同一个程序的多次执行过程对应于不同的进程，进程执行需要的资源有CPU和内存为动态
12 进程控制块（PCB）描述进程的基本情况以及运行变化的过程，PCB是进程存在的唯一标志.包含进程标识信息、处理机现场保护和进程控制信息
13 进程三状态模型，运行――进程正在处理机上运行，就绪――进程获取了除处理机之外的所有资源，获取处理机即可运行，等待――进程等待某一事件的出现，创建状态，结束状态（资源分配单位）
14 线程是进程的一部分，描述指令流执行状态。它是进程中的指令执行流的最小单元，是CPU调度的基本单位
15 线程的优点：一个进程中可以同时存在多个线程、各个线程之间可以并发的运行、各个线程之间可以共享地址空间和文件
16 线程分为用户态线程(用户线程与内核线程多对1)和内核线程（由内核进行维护，内核线程与用户线程1对1）、轻权进程
17 内核运行调度程序的条件：进程从运行状态切换到等待状态，进程退出，（非抢占系统）当前进程主动放弃CPU，（可抢占系统）中断请求被服务例程响应完成时，当前进程被抢占（时间片用完，优先级更高的进程）
18 处理机资源的使用模式――进程在CPU计算和I/O操作间交替进行.比较调度算法的准则CPU使用率（CPU处于忙状态的时间百分比）吞吐量（单位时间内完成的进程量）周转时间（进程从初始化到结束（包括等待）的总时间）等待时间(进程在就绪对列中的总时间)响应时间（从提交请求到参数响应所花费的总时间）
19 先来先服务：不公平、平均等待时间较差；短进程优先算法：不公平，平均周转时间最小，需要精准预测计算时间。可能导致饥饿（长进程一致不能使用）
20 最高响应比优先算法：spn（w+s）/s w等待时间，s执行时间基于短进程优先，不可抢占；时间片轮转算法：公平但平均等待时间较差；多级反馈队列：多种算法集成；公平共享算法：公平
21 优先级反置：操作系统中出现高优先级进程长时间等待低优先级进程所占资源的现象，基于优先级的可抢占调度算法存在优先级反置；优先级继承：占用资源的低优先级
进程继承申请相同资源的高优先级进程的优先级（只有在被阻塞）优先级天花板协议：占用资源的优先级进程和所有可能申请该资源的进程的最高优先级相同（一致使用）
22 原子操作是指一次不存在任何中断或失败的操作（不会出现部分执行的状态）测试和置位指令 交换指令
23 进程的交互关系：互斥（一个进程占用资源，其他进程不能使用）死锁（多个进程占用一定资源，形成循环等待）饥饿（其他进程轮流占用资源，一个进程一直得不到资源）
24 临界区：进程访问临界资源（一次只能被一个进程使用）的一段需要互斥执行的代码 进入区――临界区――退出区 临界区访问规则：空闲则入，忙则等待，有限等待，让权等待
25 同步互斥的方法：禁用硬件中断(仅限于单处理机)，基于软件的同步方法，高级抽象的同步方法(TS指令和交换指令)（单处理器或者多处理其均可）
26 信号量是操作系统提供的一种协调共享资源访问的方法：软件同步是平等线程间的一种同步协商机制，os是管理者地位高于进程，用信号量表示系统资源的数量 信号是一种抽象数据类型由一个整型变量和两个原子操作组成
27 管程是一种用于多线程互斥访问共享资源的程序结构：采用面向对象的方法，简化了线程间的同步控制，任一时刻只能最多有一个线程执行管程代码，正在管程中的线程可临时放弃管程的互斥访问
28 条件变量是管程内的等待机制，进入管程的线程因资源被占用而进入等待状态，每个条件变量表示等待原因，对应一个等待队列
29 死锁由于竞争资源或者通信关系，两个或多个进程间执行中出现，永远相互等待只能由其他进程引发的事件
30 出现死锁的必要条件：互斥――任何时刻只能有一个进程使用一个资源实例；持有并等待――进程至少一个资源，并正在等待获取其他进程占有资源；非抢占――资源只有在进程使用后自愿释放；循环等待
31 死锁的处理方法：死锁预防（确保系统不出现死锁）死锁避免（只允许不会出现死锁的进程请求资源）死锁检测和恢复（在检测到系统进入死锁状态后进行恢复）
32 进程通信是进程进行通信和同步的机制 IPC提供发送操作（send）和接收操作(receive) 流程：在通信进程间建立通信链路，通过send和receive交换消息 直接通信（进程ID）和间接通信（通过操作系统维护的消息队列ID实现进程间的消息接收和发送）
33 通信时分为阻塞通信（同步）和非阻塞通信（异步）发送的信息缓冲方式 0容量（发送方必须等待接收方）有限容量（通信链路缓冲队列满时，发送方必须等待）无限容量（发送方不需要等待）
34 通信机制分为：信号（进程间的软件中断通知和处理机制）（信号接受处理：捕获，忽略，屏蔽）管道（进程间基于内存文件的通信机制，不知道到另外一端）
35 消息队列是由操作系统维护的以字节序列为基本单位的间接通信机制 共享内存是把同一个物理内存区域同时映射到多个进程的内存地址空间的通信机制
36 文件系统是操作系统当中管理持久性数据的子系统，提供数据存储和访问功能；文件是具有符号名，由字节序列构成的数据项集合
37 文件系统的功能：分配文件磁盘空间-管理文件块（位置和顺序）管理空闲空间（位置）分配算法（策略）；管理文件集合-定位，命名，文件结构系统；数据可靠和安全
38 文件描述符：操作系统在打开文件表中维护的打开文件状态和信息：文件指针，最近一次读写位置，每个进程维护自己的文件指针；文件打开计数；文件的磁盘位置；访问权限； 文件系统中的基本操作单位是数据块
39 访问模式，操作系统需要了解进程如何访问文件：顺序访问-按字节依次读取；随机访问-从中间读，虚拟内存把内存页存储在文件；索引访问：依据数据特征索引
40 文件分配：连续分配，链式分配，索引分配 文件分配指标：存储效率――外部碎片等 读写性能-访问速度; 文件卷：一个拥有完整文件系统实例的外存空间通常驻扎磁盘的单个分区上
41 I/O子系统 字符设备（键盘/鼠标，串口）以字节为单位顺序访问；块设备（磁盘驱动器，磁带驱动器，光驱）均匀的数据块访问；网络设备（以太网，无线，蓝牙）格式化的报文交换
42 查询机制：轮询，设备中断，DMA总线
43 
44 